{
  "global_references":
  {
    "number_of_classes": 2,
    "batch_size": 2,
    "labels": ["cat", "dog"]
  },
  "meta_info": {
    "ml_engine": "keras (tensorflow)",
    "model_purpose": "test_generator",
    "model_id": "{model_id}",
    "model_object_name": "{model_purpose}__{model_id}",
    "data_bunch_name": "images_456"
  },
  "init": {
    "read_source_data": {
      "name": "read_disk_keras_single_input_iterator"
    },
    "define_model": {
      "name": "define_conv_simple"
    },
    "get_optimizer": {
      "name": "get_keras_optimizer"
    },
    "get_loss_function": {
      "name": "get_keras_loss"
    },
    "compile_model": {
      "name": "compile_model"
    },
    "fit": {
      "name": "fit_generator"
    },
    "save_model": {
      "names": [
        "save_hdf5", "save_tensorflow_serving_predict_signature_def"
      ]
    },
    "copy_from_local_to_remote": {
      "name": "copy_from_disk_to_disk",
      "params": {}
    },
    "evaluate": {
      "name": "evaluate_generator"
    },
    "callbacks": [
      {
        "name": "early_stopping",
        "params": {
          "patience": 2,
          "monitor": "val_loss",
          "min_delta": 0.001
        }
      },
      {
        "name": "model_checkpoint",
        "params": {
          "filepath": "./example_results/local/{model_id}/model_checkpoint/last_best_model.h5",
          "save_best_only": true
        }
      }
    ],
    "predict": {
      "name": "predict_generator"
    },
    "custom_metrics": {
      "names": [
        "evaluate_numpy_auc",
        "evaluate_numpy_micro_auc"
      ]
    },
    "custom_label_metrics": {
      "names": [
        "evaluate_numpy_accuracy",
        "evaluate_numpy_confusion_matrix"
      ]
    },
    "store_prediction_artifact_locally": {
      "name": "store_pandas_pickle"
    },

    "store_artifact_locally":
    {
      "name": "store_dict_json"
    }
  },
  "exec": {
    "read_source_data": {
      "params": {
        "train_params": {
          "generator_params": {
            "channel_shift_range": 0.0,
            "data_format": "channels_last",
            "featurewise_center": false,
            "featurewise_std_normalization": false,
            "fill_mode": "nearest",
            "height_shift_range": 0.1,
            "horizontal_flip": true,
            "rescale": 0.00392156862745098,
            "rotation_range": 0.2,
            "samplewise_center": true,
            "samplewise_std_normalization": true,
            "shear_range": 0.1,
            "vertical_flip": true,
            "width_shift_range": 0.1,
            "zca_epsilon": 1e-6,
            "zca_whitening": false,
            "zoom_range": 0.1
          },
          "iterator_params": {
            "directory": "./example_data/{data_bunch_name}/train",
            "batch_size": {"$ref": "#global_references/batch_size"},
            "class_mode": "categorical",
            "color_mode": "rgb",
            "seed": 12345,
            "shuffle": true,
            "target_size": [
              10,
              10
            ]
          }
        },
        "valid_params": {
          "generator_params": {
            "channel_shift_range": 0.0,
            "data_format": "channels_last",
            "featurewise_center": false,
            "featurewise_std_normalization": false,
            "fill_mode": "nearest",
            "height_shift_range": 0.1,
            "horizontal_flip": true,
            "rescale": 0.00392156862745098,
            "rotation_range": 0.2,
            "samplewise_center": true,
            "samplewise_std_normalization": true,
            "shear_range": 0.1,
            "vertical_flip": true,
            "width_shift_range": 0.1,
            "zca_epsilon": 1e-6,
            "zca_whitening": false,
            "zoom_range": 0.1
          },
          "iterator_params": {
            "directory": "./example_data/{data_bunch_name}/valid",
            "batch_size": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/batch_size"},
            "class_mode": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/class_mode"},
            "color_mode": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/color_mode"},
            "seed": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/batch_size"},
            "shuffle": false,
            "target_size": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/target_size"}
          }
        },
        "test_params": {
          "generator_params": {"$ref": "#exec/read_source_data/params/valid_params/generator_params"},
          "iterator_params": {
            "directory": "./example_data/{data_bunch_name}/test",
            "batch_size": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/batch_size"},
            "class_mode": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/class_mode"},
            "color_mode": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/color_mode"},
            "seed": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/batch_size"},
            "shuffle": false,
            "target_size": {"$ref": "#exec/read_source_data/params/train_params/iterator_params/target_size"}
          }
        }
      }
    },
    "define_model": {
      "params": {
        "nb_classes": {"$ref": "#global_references/number_of_classes"},
        "input_size": [10,10],
        "final_activation": "softmax",
        "dropout_rate": 0.1
      }
    },
    "get_optimizer": {
      "params": {
        "optimizer_name": "adam",
        "optimizer_params": {
          "lr": 0.0001
        }
      }
    },
    "get_loss_function": {
      "params": {
        "loss_name": "categorical_crossentropy"
      }
    },
    "compile_model": {
      "params": {
        "metrics": ["acc"],
        "weighted_metrics": null,
        "loss_weights":null,
        "sample_weight_mode":null,
        "target_tensors":null
      }
    },
    "fit": {
      "params": {
        "epochs": 1
      }
    },
    "evaluate": {
      "data_set_names": [
        "test"
      ],
      "params": {}
    },
    "predict": {
      "data_set_names": [
        "test"
      ],
      "params": {}
    },
    "save_model": {
      "save_hdf5": {
        "local_dir": "./example_results/local/{model_id}/models",
        "remote_dir": "./example_results/remote/{model_id}/models",
        "filename": "{model_object_name}__hdf5",
        "extension": ".h5",
        "overwrite_remote": true
      },
      "save_tensorflow_serving_predict_signature_def": {
        "local_dir": {"$ref": "#exec/save_model/save_hdf5/local_dir"},
        "remote_dir": {"$ref": "#exec/save_model/save_hdf5/remote_dir"},
        "filename": "{model_object_name}__tf_serving_predict",
        "temp_base_dir": "c:/tf_serving/_tmp_model/{model_object_name}__tf_serving_predict",
        "extension": ".zip",
        "overwrite_remote": true,
        "do_save_labels_txt": true,
        "input_name": "input",
        "output_name": "output",
        "labels_list": ["cat", "dog"]
      }
    },
    "evaluate_custom_metrics": {
      "pre_execution_transformation": {
        "data_set_names": ["test"],
        "params": {
          "transform_to": "numpy",
          "data_wrapper_params": {
            "predictions": {},
            "index": {},
            "targets": {}
          }
        }
      },
      "data_set_names": ["test"],
      "params": {}
    },
    "evaluate_custom_label_metrics": {
      "data_set_names": ["test"],
      "params": {}
    },
    "save_session": {
      "params": {
        "local_dir": "./example_results/local/{model_id}/session",
        "remote_dir": "./example_results/remote/{model_id}/session",
        "filename": "session.json"
      }
    },
    "save_session_artifacts": {
      "params": {
        "local_dir": {"$ref": "#exec/save_session/params/local_dir"},
        "remote_dir": {"$ref": "#exec/save_session/params/remote_dir"},
        "filenames": ["fit.ipynb", "fit_config_generator.json"]
      }
    },
    "save_formatted_config": {
      "params": {
        "local_dir": {"$ref": "#exec/save_session/params/local_dir"},
        "remote_dir": {"$ref": "#exec/save_session/params/remote_dir"},
        "filename": "config_formatted.json"
      }
    },
    "prepare_predictions_for_storage": {
      "pre_execution_transformation": {
        "data_set_names": ["test"],
        "params": {
          "transform_to": "pandas",
          "data_wrapper_params": {
            "predictions": {},
            "index": {},
            "targets": {}
          }
        }
      },
      "data_set_names": ["test"],
      "params": {
        "predictions": {
          "left_data_wrapper_name": "index",
          "right_data_wrapper_name":"predictions",
          "new_data_wrapper_name":"predictions_for_storage"
        },
        "targets": {
          "left_data_wrapper_name": "index",
          "right_data_wrapper_name":"targets",
          "new_data_wrapper_name":"targets_for_storage"
        }
      }
    },
    "save_predictions": {
      "data_sets": {
        "test": {
          "data_wrapper_name": "predictions_for_storage",
          "params": {
            "local_dir": "./example_results/local/{model_id}/predictions/test",
            "remote_dir": "./example_results/remote/{model_id}/predictions/test",
            "filename": "{model_object_name}__test__predictions"
          }
        }
      }
    },
    "save_targets": {
      "data_sets": {
        "test": {
          "data_wrapper_name": "targets_for_storage",
          "params": {
            "local_dir":{"$ref": "#exec/save_predictions/data_sets/test/params/local_dir"},
            "remote_dir": {"$ref": "#exec/save_predictions/data_sets/test/params/remote_dir"},
            "filename": "{model_object_name}__test__targets"
          }
        }
      }
    },
    "save_metrics": {
      "data_sets": {
        "test": {
          "local_dir": "./example_results/local/{model_id}/metrics/test",
          "remote_dir": "./example_results/remote/{model_id}/metrics/test",
          "filename": "{model_object_name}__test__keras_metrics"
        }
      }
    },
    "save_custom_metrics": {
      "data_sets": {
        "test": {
          "local_dir":{"$ref": "#exec/save_metrics/data_sets/test/local_dir"},
          "remote_dir": {"$ref": "#exec/save_metrics/data_sets/test/remote_dir"},
          "filename": "{model_object_name}__test__custom_metrics"
        }
      }
    },
    "save_custom_label_metrics": {
      "data_sets": {
        "test": {
          "local_dir":{"$ref": "#exec/save_metrics/data_sets/test/local_dir"},
          "remote_dir": {"$ref": "#exec/save_metrics/data_sets/test/remote_dir"},
          "filename": "{model_object_name}__test__custom_label_metrics"
        }
      }
    }
  }
}
